<?xml version="1.0" encoding="UTF-8"?>
<!--

 Authors: Marco Barisione, Emanuele Aina
 Copyright (C) 2005-2007 Marco Barisione <barisione@gmail.com>
 Copyright (C) 2005-2007 Emanuele Aina
 Copyright (C) 2016-2017 Bernd Sellentin <sel@gge-em.org>

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.

-->
<language id="nxc" _name="NXC" version="2.0" _section="Sources">
    <metadata>
      <property name="mimetypes">text/x-c;text/x-csrc;image/x-xpixmap</property>
      <property name="globs">*.nxc</property>
      <property name="line-comment-start">//</property>
      <property name="block-comment-start">/*</property>
      <property name="block-comment-end">*/</property>
    </metadata>

    <styles>
        <style id="comment"           _name="Comment"             map-to="def:comment"/>
        <style id="error"             _name="Error"               map-to="def:error"/>
        <style id="string"            _name="String"              map-to="def:string"/>
        <style id="preprocessor"      _name="Preprocessor"        map-to="def:preprocessor"/>
        <style id="common-defines"    _name="Common Defines"      map-to="def:special-constant"/>
        <style id="included-file"     _name="Included File"       map-to="def:string"/>
        <style id="char"              _name="Character"           map-to="def:character"/>
        <style id="keyword"           _name="Keyword"             map-to="def:keyword"/>
        <style id="type"              _name="Data Type"           map-to="def:type"/>
        <style id="storage-class"     _name="Storage Class"       map-to="def:type"/>
        <style id="nxt-ios"           _name="NXT IOs"             map-to="def:special-constant"/>
        <style id="printf"            _name="printf Conversion"   map-to="def:special-char"/>
        <style id="escaped-character" _name="Escaped Character"   map-to="def:special-char"/>
        <style id="floating-point"    _name="Floating point number" map-to="def:floating-point"/>
        <style id="decimal"           _name="Decimal number"      map-to="def:decimal"/>
        <style id="octal"             _name="Octal number"        map-to="def:base-n-integer"/>
        <style id="hexadecimal"       _name="Hexadecimal number"  map-to="def:base-n-integer"/>
        <style id="boolean"           _name="Boolean value"       map-to="def:boolean"/>
        <style id="commands"          _name="Commands"            map-to="def:identifier"/>
    </styles>

    <definitions>
        <!-- TODO: what about scanf ? -->
        <!-- man 3 printf -->
        <context id="printf" style-ref="printf" extend-parent="false">
            <match extended="true">
                \%\%|\%
                (?:[1-9][0-9]*\$)?      # argument
                [#0\-\ \+\'I]*          # flags
                (?:[1-9][0-9]*|\*)?     # width
                (?:\.\-?(?:[0-9]+|\*))? # precision
                (?:hh|ll|[hlLqjzt])?    # length modifier
                [diouxXeEfFgGaAcsCSpnm] # conversion specifier
            </match>
        </context>

        <define-regex id="escaped-character" extended="true">
            \\(                   # leading backslash
            [\\\"\'nrbtfav\?] |   # escaped character
            [0-7]{1,3} |          # one, two, or three octal digits
            x[0-9A-Fa-f]+         # 'x' followed by hex digits
            )
        </define-regex>

        <context id="nxc" class="no-spell-check">
            <include>

                <!-- gtk-doc -->
                <context ref="gtk-doc:inline-docs-section"/>

                <!-- Comments -->
                <context id="comment" style-ref="comment" end-at-line-end="true" class="comment" class-disabled="no-spell-check">
                    <start>//</start>

                    <include>
                      <context ref="def:in-line-comment"/>
                    </include>
                </context>

                <context id="comment-multiline" style-ref="comment" class="comment" class-disabled="no-spell-check">
                    <start>/\*</start>
                    <end>\*/</end>
                    <include>
                        <context ref="def:in-comment"/>
                    </include>
                </context>

                <context id="close-comment-outside-comment" style-ref="error">
                    <match>\*/(?!\*)</match>
                </context>

                <!-- Preprocessor -->
                <define-regex id="preproc-start">^\s*#\s*</define-regex>

                <context id="if0-comment" style-ref="comment">
                    <start>\%{preproc-start}if\b\s*0\b</start>
                    <end>\%{preproc-start}(endif|else|elif)\b</end>
                    <include>
                        <context id="if-in-if0">
                            <start>\%{preproc-start}if(n?def)?\b</start>
                            <end>\%{preproc-start}endif\b</end>
                            <include>
                                <context ref="if-in-if0"/>
                                <context ref="def:in-comment"/>
                            </include>
                        </context>
                        <context ref="def:in-comment"/>
                    </include>
                </context>

                <context id="include" style-ref="preprocessor">
                    <match extended="true">
                            \%{preproc-start}
                            (include|import)\s*
                            (".*?"|&lt;.*&gt;)
                    </match>
                    <include>
                        <context id="included-file" sub-pattern="2" style-ref="included-file"/>
                    </include>
                </context>

                <context id="preprocessor" style-ref="preprocessor" end-at-line-end="true">
                    <start extended="true">
                            \%{preproc-start}
                            (define|undef|include|import|download|if(n?def)?|else|elif|endif)
                            \b
                    </start>
                    <include>
                        <context ref="def:line-continue" ignore-style="true"/>
                        <context ref="string" ignore-style="true"/>
                        <context ref="comment"/>
                        <context ref="comment-multiline"/>
                    </include>
                </context>

                <context id="string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
                    <start>L?"</start>
                    <end>"</end>
                    <include>
                        <context ref="printf"/>
                        <context id="escaped-character" style-ref="escaped-character">
                            <match>\%{escaped-character}</match>
                        </context>
                        <context ref="def:line-continue"/>
                    </include>
                </context>

                <context id="char" style-ref="char">
                    <match>L?'(\%{escaped-character}|.)'</match>
                </context>

                <!-- http://www.lysator.liu.se/c/ANSI-C-grammar-l.html -->
                <context id="float" style-ref="floating-point">
                    <match extended="true">
                        (?&lt;![\w\.])
                        ((\.[0-9]+ | [0-9]+\.[0-9]*) ([Ee][+-]?[0-9]*)? |
                         ([0-9]+[Ee][+-]?[0-9]*))
                        [fFlL]?
                        (?![\w\.])
                    </match>
                </context>

                <context id="hexadecimal" style-ref="hexadecimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        0[xX][a-fA-F0-9]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

                <context id="octal" style-ref="octal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        0[0-7]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

                <context id="decimal" style-ref="decimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        [0-9]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

                <!-- Keywords -->
                <context id="keywords" style-ref="keyword" class="keyword">
                    <keyword>asm</keyword>
                    <keyword>const</keyword>
                    <keyword>break</keyword>
                    <keyword>case</keyword>
                    <keyword>continue</keyword>
                    <keyword>default</keyword>
                    <keyword>do</keyword>
                    <keyword>else</keyword>
                    <keyword>for</keyword>
                    <keyword>fortran</keyword>
                    <keyword>goto</keyword>
                    <keyword>if</keyword>
                    <keyword>repeat</keyword>
                    <keyword>return</keyword>
                    <keyword>safecall</keyword>
                    <keyword>start</keyword>
                    <keyword>stop</keyword>
                    <keyword>sub</keyword>
                    <keyword>switch</keyword>
                    <keyword>until</keyword>
                    <keyword>while</keyword>
                    <keyword>task</keyword>
                    <keyword>priority</keyword>
                </context>

                <context id="types" style-ref="type" class="type">
                    <keyword>bool</keyword>
                    <keyword>byte</keyword>
                    <keyword>char</keyword>
                    <keyword>int</keyword>
                    <keyword>short</keyword>
                    <keyword>long</keyword>
                    <keyword>unsigned</keyword>
                    <keyword>float</keyword>
                    <keyword>mutex</keyword>
                    <keyword>string</keyword>
                    <keyword>struct</keyword>
                    <keyword>typedef</keyword>
                    <keyword>enum</keyword>
                    <keyword>const</keyword>
                    <keyword>static</keyword>
                </context>

                <context id="storage-class" style-ref="storage-class" class="storage-class">
                    <keyword>auto</keyword>
                    <keyword>extern</keyword>
                    <keyword>inline</keyword>
                    <keyword>register</keyword>
                    <keyword>restrict</keyword>
                </context>

                <context id="nxt-ios" style-ref="nxt-ios" class="nxt-ios">
                    <keyword>BTNEXIT</keyword>
                    <keyword>BTNRIGHT</keyword>
                    <keyword>BTNLEFT</keyword>
                    <keyword>BTNCENTER</keyword>
                    <keyword>BTN1</keyword>
                    <keyword>BTN2</keyword>
                    <keyword>BTN3</keyword>
                    <keyword>BTN4</keyword>
                    <keyword>DISPLAY_WIDTH</keyword>
                    <keyword>DISPLAY_HEIGHT</keyword>
                    <keyword>IN_1</keyword>
                    <keyword>IN_2</keyword>
                    <keyword>IN_3</keyword>
                    <keyword>IN_4</keyword>
                    <keyword>LCD_LINE1</keyword>
                    <keyword>LCD_LINE2</keyword>
                    <keyword>LCD_LINE3</keyword>
                    <keyword>LCD_LINE4</keyword>
                    <keyword>LCD_LINE5</keyword>
                    <keyword>LCD_LINE6</keyword>
                    <keyword>LCD_LINE7</keyword>
                    <keyword>LCD_LINE8</keyword>
                    <keyword>OUT_A</keyword>
                    <keyword>OUT_B</keyword>
                    <keyword>OUT_C</keyword>
                    <keyword>OUT_AB</keyword>
                    <keyword>OUT_AC</keyword>
                    <keyword>OUT_BC</keyword>
                    <keyword>OUT_ABC</keyword>
                    <keyword>S1</keyword>
                    <keyword>S2</keyword>
                    <keyword>S3</keyword>
                    <keyword>S4</keyword>
                    <keyword>SENSOR_1</keyword>
                    <keyword>SENSOR_2</keyword>
                    <keyword>SENSOR_3</keyword>
                    <keyword>SENSOR_4</keyword>
                    <keyword>SENSOR_LIGHT</keyword>
                    <keyword>SENSOR_TOUCH</keyword>
                    <keyword>SENSOR_SOUND</keyword>
                    <keyword>SENSOR_MODE_RAW</keyword>
                    <keyword>SENSOR_MODE_EDGE</keyword>
                    <keyword>SENSOR_MODE_PULSE</keyword>
                    <keyword>SENSOR_MODE_PERCENT</keyword>
                    <keyword>SENSOR_MODE_CELSIUS</keyword>
                    <keyword>SENSOR_MODE_FAHRENHEIT</keyword>
                    <keyword>SENSOR_MODE_ROTATION</keyword>
                    <keyword>SENSOR_TYPE_NONE</keyword>
                    <keyword>SENSOR_TYPE_TOUCH</keyword>
                    <keyword>SENSOR_TYPE_TEMPERATURE</keyword>
                    <keyword>SENSOR_TYPE_LIGHT</keyword>
                    <keyword>SENSOR_TYPE_ROTATION</keyword>
                    <keyword>SENSOR_TYPE_LIGHT_ACTIVE</keyword>
                    <keyword>SENSOR_TYPE_LIGHT_INACTIVE</keyword>
                    <keyword>SENSOR_TYPE_SOUND_DB</keyword>
                    <keyword>SENSOR_TYPE_SOUND_DBA</keyword>
                    <keyword>SENSOR_TYPE_CUSTOM</keyword>
                    <keyword>SENSOR_TYPE_LOWSPEED</keyword>
                    <keyword>SENSOR_TYPE_LOWSPEED_9V</keyword>
                    <keyword>SENSOR_TYPE_HIGHSPEED</keyword>
                    <keyword>SENSOR_TYPE_COLORFULL</keyword>
                    <keyword>SENSOR_TYPE_COLORRED</keyword>
                    <keyword>SENSOR_TYPE_COLORGREEN</keyword>
                    <keyword>SENSOR_TYPE_COLORBLUE</keyword>
                    <keyword>SENSOR_TYPE_COLORNONE</keyword>
                </context>

                <context id="common-defines" style-ref="common-defines" class="common-defines">
                    <keyword>NULL</keyword>
                    <keyword>TRUE</keyword>
                    <keyword>FALSE</keyword>
                </context>

                <context id="commands" style-ref="commands" class="commands">
                    <keyword>Acquire</keyword>
                    <keyword>ArrayInit</keyword>
                    <keyword>ArrayLen</keyword>
                    <keyword>BluetoothStatus</keyword>
                    <keyword>ButtonCount</keyword>
                    <keyword>ButtonLongPressCount</keyword>
                    <keyword>ButtonPressCount</keyword>
                    <keyword>ButtonPressed</keyword>
                    <keyword>ButtonState</keyword>
                    <keyword>ClearScreen</keyword>
                    <keyword>ClearSensor</keyword>
                    <keyword>CircleOut</keyword>
                    <keyword>Coast</keyword>
                    <keyword>CurrentTick</keyword>
                    <keyword>CreateFile</keyword>
                    <keyword>CloseFile</keyword>
                    <keyword>DeleteFile</keyword>
                    <keyword>Float</keyword>
                    <keyword>GraphicOut</keyword>
                    <keyword>LineOut</keyword>
                    <keyword>MotorRotationCount</keyword>
                    <keyword>NumOut</keyword>
                    <keyword>NumToStr</keyword>
                    <keyword>OnFwd</keyword>
                    <keyword>OnFwdReg</keyword>
                    <keyword>OnFwdRegPID</keyword>
                    <keyword>OnFwdSync</keyword>
                    <keyword>OnFwdSyncPID</keyword>
                    <keyword>OnRev</keyword>
                    <keyword>OnRevReg</keyword>
                    <keyword>OnRevRegPID</keyword>
                    <keyword>OnRevSync</keyword>
                    <keyword>OnRevSyncPID</keyword>
                    <keyword>PlayFileEx</keyword>
                    <keyword>PlayTone</keyword>
                    <keyword>PlayToneEx</keyword>
                    <keyword>PointOut</keyword>
                    <keyword>Precedes</keyword>
                    <keyword>Random</keyword>
                    <keyword>ReadLn</keyword>
                    <keyword>ReadLnString</keyword>
                    <keyword>ReceiveRemoteNumber</keyword>
                    <keyword>ReceiveRemoteString</keyword>
                    <keyword>RectOut</keyword>
                    <keyword>Release</keyword>
                    <keyword>RenameFile</keyword>
                    <keyword>ResetScreen</keyword>
                    <keyword>ResetSensor</keyword>
                    <keyword>ResetRotationCount</keyword>
                    <keyword>ResetTachoCount</keyword>
                    <keyword>ResetAllTachoCounts</keyword>
                    <keyword>RotateMotor</keyword>
                    <keyword>RotateMotorEx</keyword>
                    <keyword>RotateMotorExPID</keyword>
                    <keyword>RotateMotorPID</keyword>
                    <keyword>SendRemoteNumber</keyword>
                    <keyword>SendRemoteString</keyword>
                    <keyword>SendResponseNumber</keyword>
                    <keyword>SendResponseString</keyword>
                    <keyword>Sensor</keyword>
                    <keyword>SensorUS</keyword>
                    <keyword>SetSensor</keyword>
                    <keyword>SetSensorColorFull</keyword>
                    <keyword>SetSensorColorBlue</keyword>
                    <keyword>SetSensorColorGreen</keyword>
                    <keyword>SetSensorColorRed</keyword>
                    <keyword>SetSensorColorNone</keyword>
                    <keyword>SetSensorLight</keyword>
                    <keyword>SetSensorLowspeed</keyword>
                    <keyword>SetSensorSound</keyword>
                    <keyword>SetSensorTouch</keyword>
                    <keyword>SetSensorMode</keyword>
                    <keyword>SetSensorType</keyword>
                    <keyword>StartTask</keyword>
                    <keyword>StrCat</keyword>
                    <keyword>StrLen</keyword>
                    <keyword>StrToNum</keyword>
                    <keyword>TextOut</keyword>
                    <keyword>Off</keyword>
                    <keyword>OpenFileRead</keyword>
                    <keyword>Wait</keyword>
                    <keyword>WriteBytes</keyword>
                    <keyword>WriteLn</keyword>
                    <keyword>WriteLnString</keyword>
                </context>  

                <!-- C99 booleans -->
                <context id="boolean" style-ref="boolean" class="boolean">
                    <keyword>true</keyword>
                    <keyword>false</keyword>
                </context>

            </include>
        </context>
    </definitions>
</language>
